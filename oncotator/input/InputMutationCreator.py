# LICENSE_GOES_HERE


"""
Created on Oct 23, 2012

@author: gavlee
"""
from abc import ABCMeta
from abc import abstractmethod

class InputMutationCreatorOptions(object):
    IS_SKIP_ALTS = "is_skip_alts"  # actual value here does not matter, since it is mostly being used as a enum

class InputMutationCreator(object):
    """
    This is the base class for classes that take in a particular input file format and produce a set of mutation data objects.
    In many cases, this would be a generator  
    """
    __metaclass__ = ABCMeta

    def __init__(self, sourceFilename, configFile="", genomeBuild="hg19", other_options=None):
        """
        Constructor
        """
        pass
    
    @abstractmethod
    def createMutations(self):
        raise NotImplementedError 
    
    @abstractmethod
    def getComments(self):
        """ Comments often need to be passed into the output.
        Get the comments from the input file.  Should be returned as a list (one per comment line, typically)"""
        raise NotImplementedError

    @abstractmethod
    def getMetadata(self):
        """ Metadata is a dict (or subclass) containing only name:Annotation (values are optional) pairs that are generated by the InputMutationCreator.
        Typically, this is called after createMutations.  All annotationSource should be 'INPUT' """
        raise NotImplementedError
